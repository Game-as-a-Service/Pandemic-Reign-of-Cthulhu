# automatically generated by the FlatBuffers compiler, do not modify

# namespace:

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class GameStart(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GameStart()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGameStart(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # GameStart
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GameStart
    def GameId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GameStart
    def PlayerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None


def GameStartStart(builder):
    builder.StartObject(2)


def Start(builder):
    GameStartStart(builder)


def GameStartAddGameId(builder, gameId):
    builder.PrependUOffsetTRelativeSlot(
        0, flatbuffers.number_types.UOffsetTFlags.py_type(gameId), 0
    )


def AddGameId(builder, gameId):
    GameStartAddGameId(builder, gameId)


def GameStartAddPlayerId(builder, playerId):
    builder.PrependUOffsetTRelativeSlot(
        1, flatbuffers.number_types.UOffsetTFlags.py_type(playerId), 0
    )


def AddPlayerId(builder, playerId):
    GameStartAddPlayerId(builder, playerId)


def GameStartEnd(builder):
    return builder.EndObject()


def End(builder):
    return GameStartEnd(builder)
